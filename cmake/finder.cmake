
macro(finder_application name text)
  if(NOT EXISTS ${name})
    message(FATAL_ERROR "${text}")
  endif()
endmacro(finder_application)

macro(finder_include name text)
  set(incs /usr/include /usr/include/libxml2)
  set(INC_FOUND 0)
  foreach(dir ${incs})
    if(EXISTS ${dir}/${name})
      set(INC_FOUND 1)
    endif()
  endforeach()
  if(NOT ${INC_FOUND})
    message(FATAL_ERROR "${text}")
  endif()
endmacro(finder_include)

macro(finder_include_version name header_type version1 version2 export_version)
  set(incs /usr/include /usr/include/${name}${version1} /usr/include/${name}${version2})
  set(INC_FOUND 0)
  foreach(dir ${incs})
    if(EXISTS ${dir}/${name}.${header_type})
      if("${dir}" MATCHES "/usr/include/${name}${version1}")
	set(${export_version} ${version1})
      elseif("${dir}" MATCHES "/usr/include/${name}${version2}")
	set(${export_version} ${version2})
      else()
	set(${export_version} "")
      endif()
      set(INC_FOUND 1)
      break()
    endif()
  endforeach()
  if(NOT ${INC_FOUND})
    message(FATAL_ERROR "Unable to find ${name}")
  endif()
endmacro(finder_include_version)

macro(finder_static_library libname libname_alt variable_name)
  set(dirs /usr/lib /usr/lib/i386-linux-gnu /usr/lib64 /usr/local/lib)
  set(LUA_FOUND 0)
  foreach(dir ${dirs})
    if(EXISTS "${dir}/lib${libname}.a")
      set(LUA_FOUND 1)
      set(${variable_name} "${dir}/lib${libname}.a")
    elseif(EXISTS "${dir}/lib${libname_alt}.a")
      set(LUA_FOUND 1)
      set(${variable_name} "${dir}/lib${libname_alt}.a")
    endif()
  endforeach()
  if(NOT ${LUA_FOUND})
    message(FATAL_ERROR "Unable to find the static library ${libname}")
  endif()
endmacro(finder_static_library)

